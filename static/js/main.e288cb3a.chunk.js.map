{"version":3,"sources":["components/Form.js","components/Article.js","components/Navigation.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","textField","margin","spacing","unit","width","button","backgroundColor","join","&:hover","props","react_default","a","createElement","onSubmit","getNews","Grid_default","container","alignItems","item","xs","TextField_default","className","classes","label","name","type","variant","InputLabelProps","required","color","shrink","Button_default","Article","md","href","url","urlToImage","src","alt","title","author","concat","source","publishedAt","content","description","Navigation","state","value","handleChange","event","_this","setState","onChange","BottomNavigation_default","this","root","showLabels","BottomNavigationAction_default","actionRoot","selected","Component","height","flexFlow","border","flex","maxWidth","textTransform","padding","fontSize","Footer","style","textAlign","marginTop","API_KEY","App","keyword","country","status","totalResults","articles","success","error","handleOnChange","_callee","_this$state","regenerator_default","wrap","_context","prev","next","console","log","axios","get","then","json","data","message","catch","response","stop","_callee2","e","_this$state2","_context2","preventDefault","target","elements","CssBaseline_default","components_Form","components_Navigation","slice","map","article","id","components_Article","key","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e288cb3a.chunk.js","sourcesContent":["import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  textField: {\n    margin: theme.spacing.unit,\n    width: \"100%\"\n  },\n  button: {\n    margin: theme.spacing.unit,\n    width: \"100%\",\n    backgroundColor: ['#26c6da'].join(','),\n    '&:hover': {\n      backgroundColor: '#26c6da',\n    }\n  }\n})\n\nconst Form = (props) => {\n  return (\n    <form onSubmit={props.getNews}>\n      <Grid container spacing={8} alignItems='center'>\n        <Grid item xs={9}>\n          <TextField\n            className={props.classes.textField}\n            label=\"Search by keyword\"\n            margin=\"normal\"\n            name=\"keyword\"\n            type=\"search\"\n            variant=\"outlined\"\n            InputLabelProps={{\n                required: true,\n                color: \"white\",\n                shrink: true\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={3}>\n          <Button\n            className={props.classes.button}\n            color='primary'\n            type='submit'\n            variant='contained' >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  )\n}\n\nexport default withStyles(styles)(Form)","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nconst Article = (props) => (\n<Grid className='article' container spacing={32}>\n  <Grid item md={4}>\n    <a href={props.url} className='article_key'>\n      {props.urlToImage && <img src={props.urlToImage} alt={props.title} />}\n      {!props.urlToImage && <p>Source</p>}\n    </a>\n  </Grid>\n\n  <Grid item md={8}>\n    <h3 className='article_key'>{props.title}</h3>\n    <p className='article_key'>\n        <em>\n          {props.author !== null && `By ${props.author}. `}\n          From <a href={props.url}>{props.source}</a>. Published at {props.publishedAt}\n        </em>\n    </p>\n    <p className='article_key'>\n      {props.content}\n    </p>\n    <p className='article_key'>\n        <em>{props.description !== '' && `Description: ${props.description}`}</em>\n    </p>\n  </Grid>\n\n</Grid>\n)\n\nexport default Article\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\n\nconst styles = () => ({\n  root: {\n    width: '100%',\n    height: 'auto',\n    flexFlow: 'row wrap',\n  },\n  actionRoot: {\n    backgroundColor: 'rgba(0,0,0,.1)',\n    border: '1px solid #fff',\n    flex: '1 0 100px',\n    maxWidth: 'initial',\n    textTransform: 'uppercase',\n  },\n  label: {\n    padding: '1rem 0',\n    fontSize: '14px',\n  },\n  selected: {\n    color: '#fff',\n    backgroundColor: '#26c6da',\n  }\n})\n\nclass Navigation extends Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({\n      value: value\n    });\n    this.props.onChange(event, value)\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        value={this.state.value}\n        classes={{ root: this.props.classes.root }}\n        showLabels\n        onChange={this.handleChange}\n      >\n        <BottomNavigationAction label=\"USA\" value=\"us\" classes={{ root: this.props.classes.actionRoot, label: this.props.classes.label, selected: this.props.classes.selected }} />\n        <BottomNavigationAction label=\"Canada\" value=\"ca\" classes={{ root: this.props.classes.actionRoot, label: this.props.classes.label, selected: this.props.classes.selected }} />\n        <BottomNavigationAction label=\"Search Results\" value=\"\" classes={{ root: this.props.classes.actionRoot, label: this.props.classes.label, selected: this.props.classes.selected }} />\n        <BottomNavigationAction label=\"France\" value=\"fr\" classes={{ root: this.props.classes.actionRoot, label: this.props.classes.label, selected: this.props.classes.selected }} />\n        <BottomNavigationAction label=\"Belgium\" value=\"be\" classes={{ root: this.props.classes.actionRoot, label: this.props.classes.label, selected: this.props.classes.selected }} />\n      </BottomNavigation>\n    )\n  }\n}\n\nNavigation.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Navigation)\n// export default Navigation","import React, { Component } from 'react'\n\nconst Footer = () => (\n  <footer style={{textAlign: 'center', marginTop: '1rem'}}>\n    <p style={{margin: 0, fontSize: 11}}>Powered by <a href='https://newsapi.org/'>NewsAPI.org</a> and <a href='https://material-ui.com/'>Material-UI</a></p>\n  </footer>\n)\n\nexport default Footer","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Form from './components/Form'\nimport Article from './components/Article'\nimport Navigation from './components/Navigation'\nimport Footer from './components/Footer'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport './App.css'\n\nconst API_KEY = \"c623fcd5cea74839a040e2976927b039\"\n\nclass App extends Component {\n  state = {\n    keyword: '',\n    country: '',\n    status: '',\n    totalResults: 0,\n    articles: [],\n    success: false,\n    error: null,\n  }\n\n  // Handles changes from Navigation Action (country-based)\n  handleOnChange = async(event, value) => {\n    await this.setState({\n      country: value\n    })\n\n    const {keyword, country} = this.state\n    \n    const url = `https://newsapi.org/v2/top-headlines?q=${keyword}&country=${country}&apiKey=${API_KEY}`\n    console.log(url)\n\n    await axios.get(url)\n      .then(json => json.data)\n      .then(data => {\n        this.setState({\n          status: data.status,\n          totalResults: data.totalResults,\n          articles: data.articles,\n          error: data.status.message\n        })\n      })\n      .catch(error => {\n        if (error !== null) {\n          this.setState({ error: error.response.status })\n        }\n      })\n\n    // const api_call = await fetch(url)\n    // const data = await api_call.json()\n\n    if (this.state.totalResults !== 0) {\n      this.setState({\n        success: true,\n        error: ''\n      })\n    } else if (country !== '') {\n      this.setState({\n        success: false,\n        error: `Cound not find any news about \"${keyword}\" in country code \"${country}\".`,\n      })\n    } else {\n      this.setState({\n        error: `Cound not find any news about \"${keyword}\".`,\n      })\n    }\n    \n    if (!keyword && !country) {\n      this.setState({\n        success: false,\n        error: 'Missing a keyword!'\n      })\n    }\n  }\n  \n  // Handles changes from Search button (keyword based)\n  getNews = async(e) => {\n    e.preventDefault()\n    \n    await this.setState({\n      country: '',\n      keyword: e.target.elements.keyword.value\n    })\n    \n    const {keyword, country} = this.state\n    \n    const url = `https://newsapi.org/v2/top-headlines?q=${keyword}&country=${country}&apiKey=${API_KEY}`\n    console.log(url)\n\n    await axios.get(url)\n      .then(json => json.data)\n      .then(data => {\n        this.setState({\n          status: data.status,\n          totalResults: data.totalResults,\n          articles: data.articles,\n          success: false,\n          error: data.status.message\n        })\n      })\n      .catch(error => {\n        this.setState({ error: error.response.status })\n      })\n\n    if (this.state.totalResults !==0) {\n      this.setState({\n        success: true,\n      })\n    } else {\n      this.setState({\n        error: `Cound not find any news about \"${keyword}\".`,\n      })\n    }\n\n    if (!keyword) {\n      this.setState({\n        country: '',\n        success: false,\n        error: 'Missing a keyword!'\n      })\n    }\n\n  }\n\n  render() {\n    return (\n      <CssBaseline>\n\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <h1 className=\"site-title\">Daily News by Maggie </h1>\n            <Form getNews={this.getNews} />\n            <Navigation\n              value={this.props.value}\n              onChange={this.handleOnChange}\n            />\n            <div className=\"article-section\">\n              {!this.state.success && <p style={{textAlign: 'center'}}>{this.state.error}</p>}\n\n              {this.state.success && this.state.articles.slice(0, 10).map((article, id) => {\n                return (\n                  <Article\n                    key={id}\n                    source={article.source.name}\n                    author={article.author}\n                    title={article.title}\n                    description={article.description}\n                    url={article.url}\n                    urlToImage={article.urlToImage}\n                    publishedAt={article.publishedAt}\n                    content={article.content}\n                  />\n                )\n              })}\n            </div>\n          </div>\n          <Footer />\n        </div>\n\n      </CssBaseline>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}